name: Build Container Image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Get Images
        id: get_images
        shell: bash
        run: |
          set -euox pipefail
          images=$(python -c 'import os, json; print(json.dumps(os.listdir("./build/images")))')
          echo "::set-output name=images::${images}"
      - name: Show Images
        shell: bash
        run: |
          set -euox pipefail
          images="${{ fromJson(steps.get_images.outputs.images) }}"
          echo $images | jq '.[]'
      - name: Parse Version
        id: parse_version
        uses: energy-quants/.github/actions/parse-git-version@main
      - name: Build Image
        shell: bash
        env:
          VERSION: ${{ steps.parse_version.outputs.version }}
          SCRIPTS_DIR: "${{ github.workspace }}/bootstrap/linux/mambaforge/"
          GITHUB_REPO: ${{ github.repository }}
        run: |
          echo $(buildah --version)
          source ${{ github.workspace }}/build/images/mambaforge/build.sh
      - name: Test Image
        shell: bash
        run: |
          set -euox pipefail
          stdout=$(podman run -it --rm localhost/mambaforge mamba --version)
          exitcode=$?
          echo "${stdout}"
          # check exitcode
          if [ $exitcode -ne 0 ]; then
              exit $exitcode
          fi
          # check expected output
          lines=($stdout)
          if [[ "${lines[0]}" != "mamba" ]]; then
              exit 1
          fi
          if [[ "${lines[2]}" != "conda" ]]; then
              exit 1
          fi
      - name: Publish Image
        shell: bash
        run: |
          set -euox pipefail
          IFS='/' read owner repo <<< ${{ github.repository }}
          registry="ghcr.io"
          image_name="${registry}/${owner}/${repo}/mambaforge"
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            image_tag="pr-${{ github.event.number }}"
          else
            image_tag="latest"
          fi
          buildah tag localhost/mambaforge "${image_name}:${image_tag}"
          buildah images
          buildah login --username ${{ github.actor }} --password ${{ secrets.GHCR_TOKEN }} ghcr.io
          # https://github.community/t/package-container-linking-via-label-not-working/176401/12
          buildah push --format v2s2 "${image_name}:${image_tag}"


# curl -fsSL -H "Authorization: token ${GITHUB_TOKEN}" 'https://api.github.com/orgs/energy-quants/packages/container/mambaforge%2Fmambaforge%2Fpr-2'