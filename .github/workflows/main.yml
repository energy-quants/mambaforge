# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # container:
    #   image: ghcr.io/energy-quants/mambaforge:latest
    #   credentials:
    #     username: dhirschfeld
    #     password: ${{  secrets.GHCR_TOKEN }}
    steps:
      - name: Cleanup Images
        id: cleanup_images
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          route: DELETE /orgs/energy-quants/packages/container/mambaforge%2Fmambaforge%2Fpr-2
          # route: GET /orgs/energy-quants/packages?package_type=container

      - name: Show Output
        shell: bash
        run: |
          set -e
          echo "${{ steps.cleanup_images.outputs.data }}"
          echo "${{ fromJson(steps.cleanup_images.outputs.data) }}"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      # # Runs a single command using the runners shell
      # - name: mamba version
      #   run: echo "$(mamba --version)"
      - name: Show Environment
        run: env | sort
      - name: Show GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Parse Version
        id: parse_version
        uses: ./.github/actions/parse-git-version
      - name: Build Container Image
        shell: bash
        env:
          VERSION: ${{ steps.parse_version.outputs.version }}
          SCRIPTS_DIR: "${{ github.workspace }}/bootstrap/linux/mambaforge/"
          GITHUB_REPO: ${{ github.repository }}
        run: |
          echo $(buildah --version)
          source ${{ github.workspace }}/build/images/mambaforge.sh
      - name: Publish Image
        shell: bash
        run: |
          set -euox pipefail
          IFS='/' read owner repo <<< ${{ github.repository }}
          registry="ghcr.io"
          image_name="${registry}/${owner}/${repo}/mambaforge"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            image_name="${image_name}/pr-${{ github.event.number }}"
          fi
          image_tag="latest"
          buildah tag localhost/mambaforge "${image_name}:${image_tag}"
          buildah images
          buildah login --username dhirschfeld --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
          # https://github.community/t/package-container-linking-via-label-not-working/176401/12
          buildah push --format v2s2 "${image_name}:${image_tag}"


# curl -fsSL -H "Authorization: token ${GITHUB_TOKEN}" 'https://api.github.com/orgs/energy-quants/packages/container/mambaforge%2Fmambaforge%2Fpr-2'